git:
  submodules: false # Não acompanhe os submodulos - No nosso caso não temos submodulos
  quiet: true # Faça sileciosamente para não produzir de maneira detalhada
  depth: 3 # Quando fizer o checkout, use uma profundidade de clonagem de 3. Obtenha as últimas confirmações
language: python
cache: pip # Guardando em cache os pacotes baixados pelo pip
jobs:
  allow_failures:
    - python: 3.8-dev # Permite que a tarefa falhe na versão do python 3.8-dev
  include:
    - stage: "Testando versões do Python em distribuições Linux/Ubuntu"
    - name: "Testando Python 3.8.0 no Ubuntu Xenial"
      python: 3.8

    - name: "Testando Python 3.8.0 no Ubuntu Bionic"
      python: 3.8
      dist: bionic

    - name: "Testando Python 3.7.4 no Ubuntu Xenial"
      python: 3.7.4

    - name: "Testando Python 3.7.4 no Ubuntu Bionic"
      python: 3.7.4
      dist: bionic

    - name: "Testando Python 3.8-dev no Ubuntu Xenial"
      python: 3.8-dev
      script:
        - exit 1

    - name: "Testando Python 3.8-dev no Ubuntu bionic"
      python: 3.8-dev
      dist: bionic
      script:
        - exit 1
      
    - stage: "Testando em outras plataformas"
      name: "Testando Python 3.7.4 no MacOS"
      os: osx
      osx_image: xcode11.2
      language: shell

    - name: "Testando Python 3.8 no Windows"
      os: windows
      language: shell
      before_install:
        - choco install python --version 3.8.0
        - python -m pip install --upgrade pip
      env: PATH=/c/Python38:/c/Python38/Scripts:$PATH

    - stage: deploy
      if: (branch = develop) AND (type = push) # Execute o deploy se e somente se a branch for develop 
      os: linux
      dist: xenial
      python: 3.8
      script:
        - echo "Deploy (for now)"

install:
  - pip3 install --upgrade pip
  - pip3 install -r requirements.txt

script:
  - python3 -m pytest -v || python -m pytest -v